name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:
    strategy:
      matrix:
        go-version: [ 1.24.x, 1.25.x ]
        runner_arch: [ ubuntu-latest, ubuntu-24.04-arm ]

    runs-on: ${{ matrix.runner_arch }}

    steps:
    - name: Clear repository
      run: rm -fr $GITHUB_WORKSPACE && mkdir $GITHUB_WORKSPACE

    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ${{ github.workspace }}/go.sum
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

    - name: Test
      run: GOMAXPROCS=4 go test -race -covermode=atomic -coverprofile=coverage.txts -v ./...

  bench:
    strategy:
      matrix:
        go-version: [ 1.24.x, 1.25.x ]
        runner_arch: [ ubuntu-latest, ubuntu-24.04-arm ]

    runs-on: ${{ matrix.runner_arch }}
    steps:
      - name: Clear repository
        run: rm -fr $GITHUB_WORKSPACE && mkdir $GITHUB_WORKSPACE

      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ${{ github.workspace }}/go.sum
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Test
        run: |
          export SONIC_NO_ASYNC_GC=1
          go test -run ^$ -count=20 -benchmem -bench .
